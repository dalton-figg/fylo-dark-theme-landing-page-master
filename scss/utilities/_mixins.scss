// [VARIABLES, LISTS, MAPS] //

$breakpoints: (
  "phone": 375px,
  "tablet-small": 640px,
  "tablet": 768px,
  "laptop": 1024px,
  "desktop": 1440px,
);

$weights: (
  "light": 300,
  "regular": 400,
  "medium": 500,
  "semibold": 600,
  "bold": 700,
  "extrabold": 800,
  "black": 900,
);

@mixin gradient-button($width: 200px) {
  border-radius: 100vw;
  // set size
  max-width: $width;
  width: 100%;
  padding: 1rem;
  // fix typography
  font-weight: 700;
  font-family: $font-secondary;
  text-align: center;
  // link reset
  color: $clr-primary-900;
  text-decoration: none;
  background-image: linear-gradient(
    90deg,
    $clr-primary-800 0%,
    hsl(187deg 64% 57%) 50%,
    $clr-primary-600 100%
  );
  // [BROWSER SUPPORT] //
  background-image: -webkit-gradient(
    linear,
    left top,
    right top,
    from($clr-primary-800),
    color-stop(50%, hsl(187deg 64% 57%)),
    to($clr-primary-600)
  );
  background-image: -o-linear-gradient(
    left,
    $clr-primary-800 0%,
    hsl(187deg 64% 57%) 50%,
    $clr-primary-600 100%
  );
}

@mixin media($width, $type: min) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);
    @if $type == max {
      $width: $width - 1px;
    }

    // built to handle custom values and max-width queries

    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  } @else {
    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  }
}

// built to handle keywords matching up with every value

@mixin weight($weight) {
  @if map_has_key($weights, $weight) {
    $weight: map_get($weights, $weight);
    font-weight: $weight;
  }
}

// just an easier way to add sr-only - could attach this to a class

@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

// handles almost every commonly used positioning property, could be easily expanded out into seperate mixins for a better toolbox + improved readability.

// @mixin layout(
//   $display: null,
//   $justify: null,
//   $align: null,
//   $wrap: null,
//   $gap: null,
//   $direction: null,
//   $column: null,
//   $row: null,
//   $columns: null,
//   $rows: null,
//   $index: null
// ) {
//   display: $display;
//   justify-content: $justify;
//   align-items: $align;
//   flex-wrap: $wrap;
//   flex-direction: $direction;
//   grid-column: $column;
//   grid-row: $row;
//   grid-template-columns: $columns;
//   grid-template-rows: $rows;
//   gap: $gap;
//   z-index: $index;
// }

@mixin flex-cols{
  display: flex;
  flex-direction: column;
}

@mixin flex-center{
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin grid-equal-cols($cols: 2, $size: 1fr){
  display: grid;
  grid-template-columns: repeat($cols, $size);
}

@mixin font-size($size) {
  font-size: $size * 1px; // includes pixel fallback for IE8-
  font-size: calc-rem($size);
}

@mixin max-width($max-width, $center: false) {
  max-width: $max-width;
  width: 100%;

  // additional option to add a margin center with the max-width as it is veyr common

  @if ($center) {
    margin: 0 auto;
  }
}

// allows for quick resets on inputs as well as custom background, also built for adding vendor prefixes (helpful without autoprefixer)

@mixin appearance-reset($background) {
  appearance: none;
  background: $background;
  border: none;
  outline: none;
  // [BROWSER SUPPORT] //
  -moz-appearance: none;
  -webkit-appearance: none;
}
